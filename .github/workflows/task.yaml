name: The Nature of Concurrency CI

on:
  pull_request

jobs:
  tests:
    runs-on: self-hosted
    timeout-minutes: 6
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Ensure branch is up-to-date with main
        run: |
          set -e
          git fetch origin
          BRANCH="${GITHUB_HEAD_REF:-$(git rev-parse --abbrev-ref HEAD)}" 
          if git log origin/main ^origin/"$BRANCH" --oneline | grep .; then
            echo "Some commits from origin/main are missing in origin/$BRANCH"
            exit 1
          else
            echo "All commits from origin/main are included in origin/$BRANCH"
          fi
      - name: Check for YAML and Test changes
        run: |
          CHANGES=$(git diff --minimal --name-only origin/main...@ | grep -E '(pull_request_template\.md|\.golangci\.yaml|library\.yaml|integration_test\.go)$' | wc -l)
          if [ "$CHANGES" -ne 0 ]; then
            echo "Changes detected in YAML or Test files: $CHANGES files changed."
            exit 1
          else
            echo "No changes in YAML or Test Go files."
          fi
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: v1.24.0
          cache-dependency-path: ${{ github.action_path }}/go.sum
          cache: true
      - name: Set up Task
        run: go install github.com/go-task/task/v3/cmd/task@latest
      - name: Dependencies
        working-directory: ./
        run: go mod tidy
      - name: Linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.5
      - name: Run tests
        run: |
          task test
